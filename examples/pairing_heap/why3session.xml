<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.3.2" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="ocaml" proved="true">
<path name=".."/><path name="pairing_heap.ml"/>
<theory name="Pairing_heap" proved="true">
 <goal name="Make.le_roots_trans" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="le_roots_trans.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="l">
   <goal name="le_roots_trans.0.0" proved="true">
   <proof prover="1"><result status="valid" time="0.03" steps="86"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Make.occ_nonneg&#39;vc" expl="VC for occ_nonneg" proved="true">
 <proof prover="1"><result status="valid" time="0.04" steps="29"/></proof>
 </goal>
 <goal name="Make.occ_list_nonneg&#39;vc" expl="VC for occ_list_nonneg" proved="true">
 <proof prover="1"><result status="valid" time="0.03" steps="93"/></proof>
 </goal>
 <goal name="Make.size_nonneg&#39;vc" expl="VC for size_nonneg" proved="true">
 <proof prover="1"><result status="valid" time="0.02" steps="44"/></proof>
 </goal>
 <goal name="Make.size_tree_nonneg&#39;vc" expl="VC for size_tree_nonneg" proved="true">
 <proof prover="1"><result status="valid" time="0.03" steps="51"/></proof>
 </goal>
 <goal name="Make.size_tree_list_nonneg&#39;vc" expl="VC for size_tree_list_nonneg" proved="true">
 <proof prover="0"><result status="valid" time="0.14" steps="35024"/></proof>
 </goal>
 <goal name="Make.size_empty" proved="true">
 <proof prover="1" timelimit="1"><result status="valid" time="0.08" steps="439"/></proof>
 </goal>
 <goal name="Make.le_root_trans" proved="true">
 <proof prover="1"><result status="valid" time="0.02" steps="53"/></proof>
 </goal>
 <goal name="Make.occ_t_nonneg" proved="true">
 <proof prover="1"><result status="valid" time="0.01" steps="46"/></proof>
 </goal>
 <goal name="Make.heap_mem_le&#39;vc" expl="VC for heap_mem_le" proved="true">
 <proof prover="1"><result status="valid" time="0.08" steps="237"/></proof>
 </goal>
 <goal name="Make.tree_mem_le&#39;vc" expl="VC for tree_mem_le" proved="true">
 <proof prover="1"><result status="valid" time="0.07" steps="260"/></proof>
 </goal>
 <goal name="Make.tree_list_mem_le&#39;vc" expl="VC for tree_list_mem_le" proved="true">
 <proof prover="1"><result status="valid" time="0.10" steps="522"/></proof>
 </goal>
 <goal name="Make.root_is_minimum&#39;vc" expl="VC for root_is_minimum" proved="true">
 <proof prover="1"><result status="valid" time="0.05" steps="159"/></proof>
 </goal>
 <goal name="Make.is_empty&#39;vc" expl="VC for is_empty" proved="true">
 <proof prover="1"><result status="valid" time="0.03" steps="42"/></proof>
 </goal>
 <goal name="Make.find_min_exn&#39;vc" expl="VC for find_min_exn" proved="true">
 <proof prover="1"><result status="valid" time="0.05" steps="140"/></proof>
 </goal>
 <goal name="Make.merge&#39;vc" expl="VC for merge" proved="true">
 <proof prover="1"><result status="valid" time="1.95" steps="18875"/></proof>
 </goal>
 <goal name="Make.add&#39;vc" expl="VC for add" proved="true">
 <proof prover="1"><result status="valid" time="0.12" steps="1033"/></proof>
 </goal>
 <goal name="Make.merge_list&#39;vc" expl="VC for merge_list" proved="true">
 <proof prover="1"><result status="valid" time="0.35" steps="2774"/></proof>
 </goal>
 <goal name="Make.delete_min_exn&#39;vc" expl="VC for delete_min_exn" proved="true">
 <proof prover="1"><result status="valid" time="0.11" steps="518"/></proof>
 </goal>
</theory>
</file>
</why3session>
