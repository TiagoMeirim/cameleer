<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.12.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC5" version="1.0.6-dev.66.d284ecaae" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.5.2" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="ocaml">
<path name=".."/><path name="mergesort.ml"/>
<theory name="Mergesort">
 <goal name="Make.sorted_list_aux&#39;vc" expl="VC for sorted_list_aux" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sorted_list_aux&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.024661" steps="31"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Make.sorted_list&#39;vc" expl="VC for sorted_list" proved="true">
 <proof prover="2"><result status="valid" time="0.037270" steps="112"/></proof>
 </goal>
 <goal name="Make.sorted_mem" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="sorted_mem.0" proved="true">
  <proof prover="1"><result status="valid" time="0.256794" steps="49019"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="sorted_mem.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.027362" steps="33"/></proof>
   </goal>
   <goal name="sorted_mem.0.1" proved="true">
   <proof prover="2"><result status="valid" time="0.036229" steps="30"/></proof>
   </goal>
   <goal name="sorted_mem.0.2" proved="true">
   <proof prover="2"><result status="valid" time="0.035206" steps="24"/></proof>
   </goal>
   <goal name="sorted_mem.0.3" proved="true">
   <proof prover="2"><result status="valid" time="0.035880" steps="173"/></proof>
   </goal>
   <goal name="sorted_mem.0.4" proved="true">
   <proof prover="1"><result status="valid" time="0.175570" steps="41275"/></proof>
   </goal>
   <goal name="sorted_mem.0.5" proved="true">
   <proof prover="2"><result status="valid" time="0.015620" steps="38"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Make.sorted_append" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="sorted_append.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="l1">
   <goal name="sorted_append.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sorted_append.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.031588" steps="25"/></proof>
    </goal>
    <goal name="sorted_append.0.0.1" proved="true">
    <proof prover="2"><result status="valid" time="0.030757" steps="22"/></proof>
    </goal>
    <goal name="sorted_append.0.0.2" proved="true">
    <proof prover="2"><result status="valid" time="0.037263" steps="25"/></proof>
    </goal>
    <goal name="sorted_append.0.0.3" proved="true">
    <proof prover="2"><result status="valid" time="0.028208" steps="30"/></proof>
    </goal>
    <goal name="sorted_append.0.0.4" proved="true">
    <proof prover="2"><result status="valid" time="0.059129" steps="398"/></proof>
    </goal>
    <goal name="sorted_append.0.0.5" proved="true">
    <proof prover="2"><result status="valid" time="0.054351" steps="253"/></proof>
    </goal>
    <goal name="sorted_append.0.0.6" proved="true">
    <proof prover="2"><result status="valid" time="0.027658" steps="91"/></proof>
    </goal>
    <goal name="sorted_append.0.0.7" proved="true">
    <proof prover="2"><result status="valid" time="0.086267" steps="741"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Make.merge_aux&#39;vc" expl="VC for merge_aux" proved="true">
 <proof prover="2"><result status="valid" time="0.675651" steps="10441"/></proof>
 </goal>
 <goal name="Make.merge&#39;vc" expl="VC for merge" proved="true">
 <proof prover="2"><result status="valid" time="0.037037" steps="142"/></proof>
 </goal>
 <goal name="Make.split&#39;vc" expl="VC for split">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.000000" steps="1246430"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.000000" steps="115748"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.000000" steps="10576"/></proof>
 </goal>
 <goal name="Make.mergesort&#39;vc" expl="VC for mergesort">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.000000" steps="1381742"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.000000" steps="143679"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.000000" steps="21482"/></proof>
 </goal>
</theory>
</file>
</why3session>
