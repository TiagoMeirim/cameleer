<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="1" name="Alt-Ergo" version="2.5.3" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC5" version="1.0.6-dev.66.d284ecaae" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="ocaml" proved="true">
<path name=".."/><path name="binary_search_tree.ml"/>
<theory name="Binary_search_tree" proved="true">
 <goal name="Make.occ_nonneg" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="occ_nonneg.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="t">
   <goal name="occ_nonneg.0.0" proved="true">
   <proof prover="1"><result status="valid" time="0.010000" steps="101"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Make.empty&#39;vc" expl="VC for empty" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="empty&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="24"/></proof>
  </goal>
  <goal name="empty&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="20"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Make.insert&#39;vc" expl="VC for insert" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="insert&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="110"/></proof>
  </goal>
  <goal name="insert&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.010000" steps="33"/></proof>
  </goal>
  <goal name="insert&#39;vc.2" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="111"/></proof>
  </goal>
  <goal name="insert&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="33"/></proof>
  </goal>
  <goal name="insert&#39;vc.4" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="insert&#39;vc.4.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.020000" steps="144"/></proof>
   </goal>
   <goal name="insert&#39;vc.4.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.010000" steps="235"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="insert&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.020000" steps="87"/></proof>
   </goal>
   <goal name="insert&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.010000" steps="156"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert&#39;vc.6" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="insert&#39;vc.6.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.030000" steps="442"/></proof>
   </goal>
   <goal name="insert&#39;vc.6.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.156907" steps="990"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Make.mem&#39;vc" expl="VC for mem" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="mem&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="151"/></proof>
  </goal>
  <goal name="mem&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.020000" steps="61"/></proof>
  </goal>
  <goal name="mem&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="mem&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.158134" steps="27377"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="mem&#39;vc.2.0.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.028503" steps="28"/></proof>
    </goal>
    <goal name="mem&#39;vc.2.0.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="mem&#39;vc.2.0.1.0" expl="postcondition" proved="true">
     <proof prover="1"><result status="valid" time="0.046886" steps="166"/></proof>
     </goal>
     <goal name="mem&#39;vc.2.0.1.1" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="mem&#39;vc.2.0.1.1.0" expl="postcondition" proved="true">
      <proof prover="1"><result status="valid" time="0.039505" steps="175"/></proof>
      </goal>
      <goal name="mem&#39;vc.2.0.1.1.1" expl="postcondition" proved="true">
      <proof prover="1"><result status="valid" time="0.036750" steps="178"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="mem&#39;vc.2.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="mem&#39;vc.2.1.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.020000" steps="69"/></proof>
    </goal>
    <goal name="mem&#39;vc.2.1.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.020000" steps="281"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
