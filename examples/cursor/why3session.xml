<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.3.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="ocaml" proved="true">
<path name=".."/><path name="cursor.ml"/>
<theory name="Refinement__CursorList" proved="true">
 <goal name="Cursor.permitted_empty" proved="true">
 <proof prover="1"><result status="valid" time="0.14" steps="42469"/></proof>
 </goal>
 <goal name="Cursor.next&#39;refn&#39;vc" expl="VC for next&#39;refn" proved="true">
 <proof prover="1"><result status="valid" time="0.09" steps="38974"/></proof>
 </goal>
 <goal name="Cursor.has_next&#39;refn&#39;vc" expl="VC for has_next&#39;refn" proved="true">
 <proof prover="1"><result status="valid" time="0.06" steps="36765"/></proof>
 </goal>
</theory>
<theory name="Cursor" proved="true">
 <goal name="CursorList.t&#39;vc" expl="VC for t" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="t&#39;vc.0" expl="VC for t" proved="true">
  <transf name="assert" proved="true" arg1="(seq_of_list (Nil: list a) = seq_of_list (Nil: list a) ++ seq_of_list (Nil: list a))">
   <goal name="t&#39;vc.0.0" expl="asserted formula" proved="true">
   <proof prover="1"><result status="valid" time="0.14" steps="43678"/></proof>
   </goal>
   <goal name="t&#39;vc.0.1" expl="VC for t" proved="true">
   <proof prover="1"><result status="valid" time="0.09" steps="37511"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="CursorList.seq_of_list_append" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="seq_of_list_append.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="l1">
   <goal name="seq_of_list_append.0.0" proved="true">
   <proof prover="0"><result status="valid" time="0.16" steps="608"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="CursorList.seq_of_list_length" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="seq_of_list_length.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="l">
   <goal name="seq_of_list_length.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="seq_of_list_length.0.0.0" proved="true">
    <proof prover="1"><result status="valid" time="0.12" steps="41620"/></proof>
    </goal>
    <goal name="seq_of_list_length.0.0.1" proved="true">
    <proof prover="0"><result status="valid" time="0.03" steps="63"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="CursorList.next&#39;vc" expl="VC for next" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="next&#39;vc.0" expl="unreachable point" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="73"/></proof>
  </goal>
  <goal name="next&#39;vc.1" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="next&#39;vc.1.0" expl="type invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.12" steps="566"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="next&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.10" steps="205792"/></proof>
  </goal>
  <goal name="next&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="37093"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="CursorList.has_next&#39;vc" expl="VC for has_next" proved="true">
 <proof prover="1"><result status="valid" time="0.20" steps="58231"/></proof>
 </goal>
 <goal name="CursorList.create&#39;vc" expl="VC for create" proved="true">
 <proof prover="1"><result status="valid" time="0.18" steps="43501"/></proof>
 </goal>
 <goal name="sum_cursor&#39;vc" expl="VC for sum_cursor" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sum_cursor&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.26" steps="67385"/></proof>
  </goal>
  <goal name="sum_cursor&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.18" steps="45989"/></proof>
  </goal>
  <goal name="sum_cursor&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="36727"/></proof>
  </goal>
  <goal name="sum_cursor&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.07" steps="36819"/></proof>
  </goal>
  <goal name="sum_cursor&#39;vc.4" expl="loop variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sum_cursor&#39;vc.4.0" expl="loop variant decrease" proved="true">
   <proof prover="1"><result status="valid" time="0.15" steps="43862"/></proof>
   </goal>
   <goal name="sum_cursor&#39;vc.4.1" expl="loop variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="89"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sum_cursor&#39;vc.5" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="36876"/></proof>
  </goal>
  <goal name="sum_cursor&#39;vc.6" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sum_cursor&#39;vc.6.0" expl="loop invariant preservation" proved="true">
   <transf name="assert" proved="true" arg1="(logic_sum (fun (i:int) -&gt; (visited c)[i]) 0 (length (visited c)) = logic_sum (fun (i:int) -&gt; (visited c)[i]) 0 (length (visited c1)) + x)">
    <goal name="sum_cursor&#39;vc.6.0.0" expl="asserted formula" proved="true">
    <proof prover="0" timelimit="5"><result status="valid" time="4.29" steps="7248"/></proof>
    </goal>
    <goal name="sum_cursor&#39;vc.6.0.1" expl="loop invariant preservation" proved="true">
    <proof prover="0" timelimit="5"><result status="valid" time="1.51" steps="740"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="sum_cursor&#39;vc.7" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sum_cursor&#39;vc.7.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.91" steps="153626"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
